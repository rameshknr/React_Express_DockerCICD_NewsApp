{"version":3,"sources":["serviceWorker.js","Components/card/Card.jsx","Components/card/FilterCard.jsx","Components/filter/filter.jsx","Components/dashboard/Dashboard.jsx","Components/card/NoReadLater.jsx","Components/readNow/ReadNow.jsx","Components/footer/Footer.jsx","Components/login/Login.jsx","Components/header/Header.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Card","props","className","data-testid","style","width","src","image","alt","title","description","id","onClick","addData","bind","filterId","addDataFilter","Filter","useState","news","setnews","country","setCountry","category","setCategory","sources","setsources","searchTextData","setsearchTextData","AddDetailDataFilter","readLater","map","item","source","alert","fetch","method","body","JSON","stringify","name","author","content","urlToImage","url","headers","localStorage","getItem","type","data-toggle","data-target","aria-labelledby","aria-hidden","data-dismiss","aria-label","placeholder","onChange","e","target","value","apiString","length","then","res","json","data","articles","v4","searchNews","key","Dashboard","useEffect","AddDetailData","ReadNow","newsId","newsheading","newsImage","newsdescription","Footer","Login","username","setUsername","password","setPassword","setItem","token","isAuthenticated","Header","href","aria-controls","aria-expanded","to","exact","path","component","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d81a1685.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst Card = (props) => {\n\n    const AddReadLaterHandler= (id) =>{\n        props.addData(id);\n    }\n    return (\n        <div  className = \"col-md-4\">\n            <div data-testid=\"card\" className=\"card mb-3\" style={{ width: '18rem' }}>\n                <div className=\"card-body\">\n\n                    <img src={props.image} data-testid=\"cardImage\" className=\"card-img-top\" alt=\"...\" />\n                    <h3 className=\"card-title\">{props.title}</h3>\n                    <p className=\"card-text\">{props.description}</p>\n                    <button id=\"readLaterDash\" data-testid=\"readLater\" onClick={AddReadLaterHandler.bind(this,props.id)} className=\"btn btn-secondary float-right\">Read Later</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\n\nconst Card = (props) => {\n\n    const AddReadLaterHandlerFilter= (filterId) =>{\n        props.addDataFilter(filterId);\n    }\n    return (\n        <div  className = \"col-md-4\">\n            <div data-testid=\"card\" className=\"card mb-3\" style={{ width: '18rem' }}>\n                <div className=\"card-body\">\n                    <img src={props.image} data-testid=\"cardImage\" className=\"card-img-top\" alt=\"...\" />\n                    <h3 className=\"card-title\">{props.title}</h3>\n                    <p className=\"card-text\">{props.description}</p>\n                    <button id=\"readLaterFilter\" data-testid=\"readLaterFilter\" onClick={AddReadLaterHandlerFilter.bind(this,props.filterId)} className=\"btn btn-secondary float-right\">Read Later</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React, { useState, useEffect } from 'react';\nimport Card from '../card/FilterCard';\nimport {v4} from 'uuid';\n\nconst Filter = (props) => {\n    const [news, setnews] = useState([]);\n    const [country, setCountry] = useState('');\n    const [category, setCategory] = useState('');\n    const [sources, setsources] = useState('');\n    const [searchTextData, setsearchTextData] = useState('');\n\n    const searchNews =() =>{\n        let apiString = 'https://newsapi.org/v2/top-headlines?'\n        if(country!= ''){\n            apiString = apiString+`country=${country}&`;\n        }\n        if(category!= ''){\n            apiString = apiString+`category=${category}&`;\n        }\n        if(sources!= ''){\n            apiString = apiString+`sources=${sources}&`;\n        }\n        if(searchTextData!= ''){\n            apiString = apiString+`q=${searchTextData}&`;\n        }\n        apiString += `apikey=166d16dcc1a741b99692f315fa254960&page=1`;\n        if(apiString.length>83){\n            fetch(apiString)\n                .then(res => res.json())\n                .then(data => {\n                    data.articles.map(item => {\n                        item.source.id = v4();\n                    }); \n                    setnews(data.articles);\n            });\n        }\n        \n    }\n    const AddDetailDataFilter= (filterId) => {\n        let readLater = {};\n        news.map(item =>{\n            if(item.source.id === filterId){\n                readLater =  item;\n            }\n        } );\n        alert(readLater.title);\n        fetch('http://localhost:8009/api/v1/news', {\n            method: 'POST',\n            body: JSON.stringify({\n                source:{\n                    id: readLater.source.id,\n                    name: readLater.source.name\n                },\n                author:readLater.author,\n                title: readLater.title,\n                content: readLater.content,\n                urlToImage: readLater.urlToImage,\n                description: readLater.description,\n                url: readLater.url\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        });\n    }\n\n    return (\n         <div>\n            <button id=\"NewsFilterData\" type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n                News Filter Data\n            </button>\n\n            <div className=\"modal fade\" id=\"exampleModal\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">News Filter</h5>\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div className=\"modal-body\">\n                    <div className=\"form-group col-md-8\">\n                        <input id=\"country\" type=\"text\" placeholder=\"Enter Country\" className=\"form-control\" onChange={(e) => setCountry(e.target.value)}  />\n                    </div>\n                    <div className=\"form-group col-md-8\">\n                        <input id=\"category\" type=\"text\" placeholder=\"Enter Category\" className=\"form-control\" onChange={(e) => setCategory(e.target.value)}  />\n                    </div>\n                    <div className=\"form-group col-md-8\">\n                        <input id=\"sources\" type=\"text\" placeholder=\"Enter sources\" className=\"form-control\" onChange={(e) => setsources(e.target.value)}  />\n                    </div>\n                    <div className=\"form-group col-md-8\">\n                        <input id=\"searchTextData\" type=\"text\" placeholder=\"Search Text\" className=\"form-control\" onChange={(e) => setsearchTextData(e.target.value)}  />\n                    </div>\n                </div>\n                <div className=\"modal-footer\">\n                    <button id=\"searchNews\" type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={searchNews()} >Apply</button>\n                </div>\n                </div>\n            </div>\n            </div>\n            <div className = \"row md-8\" >\n                        {\n                        news.map(item => \n                            <Card addDataFilter={AddDetailDataFilter} key={item.source.id} filterId={item.source.id} title={item.title} image={item.urlToImage} description={item.description} />\n                        )\n                    }\n            </div>\n\n        </div>\n    )\n}\n\nexport default Filter;","import React, { useState, useEffect } from 'react';\nimport {v4} from 'uuid';\nimport Card from '../card/Card';\nimport Filter from '../filter/filter'\n\n\nconst Dashboard = (props) =>{\n\n    const [news, setnews] = useState([]);\n    useEffect(() => {\n        fetch('http://localhost:8008/trending/in',{\n            method: 'GET',\n            headers:{\n            'Content-Type' : 'application/json'            }\n            })\n            .then(res => res.json())\n            .then(data => {\n                data.articles.map(item => {\n                    item.source.id = v4();\n                }); \n                return setnews(data.articles);\n         });\n    }, []);\n\n    const AddDetailData= (id) => {\n        let readLater = {};\n        news.map(item =>{\n            if(item.source.id === id){\n                readLater =  item;\n            }\n        } );\n        fetch('http://localhost:8009/api/v1/news', {\n            method: 'POST',\n            body: JSON.stringify({\n                source:{\n                    id: readLater.source.id,\n                    name: readLater.source.name\n                },\n                author:readLater.author,\n                title: readLater.title,\n                content: readLater.content,\n                urlToImage: readLater.urlToImage,\n                description: readLater.description,\n                url: readLater.url\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        });\n    }\n\n    return(\n        <div data-testid=\"content\" className=\"container mt-3\">\n            <div className=\"row mb-3\">\n                <Filter/>\n            </div>\n            <div className=\"row\">\n                <div className=\"row\"><h1>Trending News In INDIA</h1></div>\n                <div className=\"row\"> \n                    {\n                        news.map(item => \n                            <Card addData={AddDetailData} key={item.source.id} id={item.source.id} title={item.title} image={item.urlToImage} description={item.description} />\n                        )\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Dashboard;\n","import React from 'react';\n\nconst Card = (props) => {\n\n    const AddReadLaterHandler= (id) =>{\n        props.addData(id);\n    }\n    return (\n        <div  className = \"col-md-4\">\n            <div data-testid=\"card\" className=\"card mb-3\" style={{ width: '18rem' }}>\n                <div className=\"card-body\">\n                    <img src={props.image} data-testid=\"cardImage\" className=\"card-img-top\" alt=\"...\" />\n                    <h3 className=\"card-title\">{props.title}</h3>\n                    <p className=\"card-text\">{props.description}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React, { useState, useEffect } from 'react';\nimport Card from '../card/NoReadLater';\n\nconst ReadNow = () => {\n        const [news, setnews] = useState([]);\n        useEffect(() => {\n            fetch('http://localhost:8009/api/v1/news',{\n                method: 'GET' \n            }).then(res => res.json())\n            .then(data => { \n                setnews(data);\n             });\n        }, []);\n \n        return(\n            <div className=\"container mt-3\">\n                <div className=\"row\">\n                            {\n                                news.map(item => \n                                    <Card key={item.newsId} id={item.newsId} title={item.newsheading} image={item.newsImage} description={item.newsdescription} />\n                                )\n                            }\n                    \n                </div>\n            </div>\n        );\n}\n\nexport default ReadNow;","import React from 'react';\n\n\nconst Footer = () => {\n    return(\n        <div data-testid=\"footer\" className= \"footer bg-danger\"> Copyright &copy;News API </div>\n    );\n}\n\nexport default Footer;\n","import React, { useState } from 'react';\n\nconst Login = () =>{\n    const [username, setUsername] = useState([]);\n    const [password, setPassword] = useState([]);\n\n    const loginHandler = (props) =>{\n        fetch(`http://localhost:8010/api/auth/login`,{\n            method: 'POST',\n            body: JSON.stringify({\n                username: username,\n                password: password\n            }),\n            headers:{\n                'Content-Type' : 'application/json'            }\n        }).then(res => res.json()\n        ).then(data =>{ \n\n            localStorage.setItem('token',data.token);\n\n            fetch(`http://localhost:8010/api/auth/isAuthenticated`,{\n            method: 'GET',\n            headers:{\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n            }).then(res => res.json()\n            ).then(data =>{ \n\n            localStorage.setItem('isAuthenticated',data.isAuthenticated);\n            });\n        });\n    }\n\n    return(\n    <div data-testid=\"content\" className=\"container mt-3\">\n        <div className=\"row\">\n            <div className=\"col-md-4\">\n                <div className=\"form-group\">\n                    <input id =\"Username\" type=\"text\" placeholder=\"Enter Username\" className=\"form-control\" onChange={(e) => setUsername(e.target.value)}  />\n                </div>\n                <div className=\"form-group\">\n                    <input id=\"password\" type=\"password\" placeholder=\"Enter Password\" className=\"form-control\" onChange={(e) => setPassword(e.target.value)}  />\n                </div>\n                <div className=\"form-group\">\n                    <button id=\"loginBtn\" data-testid=\"btnPrimary\" onClick={loginHandler} type=\"button\" className=\"btn btn-primary\">Submit</button>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n\n}\n\nexport default Login;\n","import React from 'react';\n\nimport Dashboard from '../dashboard/Dashboard';\nimport ReadNow from '../readNow/ReadNow';\nimport Footer from '../footer/Footer';\nimport Login from '../login/Login';\n\nimport { Link, BrowserRouter, Switch, Route,Redirect } from 'react-router-dom';\n\nconst Header = () => {\n    return(\n        <div>\n        <BrowserRouter>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-primary\">\n            <a data-testid=\"header\" className=\"navbar-brand\" href=\"https://newsapi.org/\"> News API </a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                    <Link id=\"dashboard\" className=\"nav-link\" to=\"/\">Dashboard </Link>\n                </li>\n                <li className=\"nav-item active\">\n                    <Link id=\"readnow\" className=\"nav-link\" to=\"/readnow\">Read Now </Link>\n                </li>\n                <li className=\"nav-item active\">\n                    <Link id= \"login\"  className=\"nav-link\" to=\"/login\">Login </Link>\n                </li>\n                </ul>\n            </div>\n\n            </nav>\n            <Switch>\n                <Route exact path = \"/\" component = {()=> localStorage.getItem('isAuthenticated') ? <Dashboard/> :<Redirect to=\"/login\" />} />          \n                <Route exact path = \"/readnow\" component = {()=> localStorage.getItem('isAuthenticated') ? <ReadNow/> :<Redirect to=\"/login\" />} />          \n                <Route exact path = \"/login\" component ={Login} />          \n            </Switch>\n            </BrowserRouter>    \n            <Footer/>           \n         </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\n\nimport Header from './Components/header/Header';\n\nfunction App() {  \n    return (\n    <div className = 'main-content' >\n       <Header/>\n    </div>\n   \n    );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}